{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\portfolio\\\\Beginner-Portfolio-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useLayoutEffect,useState}from'react';export default function useWindowPosition(id,height){var elements=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),animation=_useState2[0],setAnimation=_useState2[1];useLayoutEffect(function(){function updatePosition(){try{var offetSetHeight=window.document.getElementById(id).offsetHeight;if(window.pageYOffset>offetSetHeight*elements*height){setAnimation(true);}}catch(err){setAnimation(false);}}window.addEventListener('scroll',updatePosition);updatePosition();return function(){return window.removeEventListener('scroll',updatePosition);};},[id,height,elements]);return animation;}","map":{"version":3,"sources":["C:/Users/User/Desktop/portfolio/Beginner-Portfolio-master/src/hook/useWindowPosition.js"],"names":["useLayoutEffect","useState","useWindowPosition","id","height","elements","animation","setAnimation","updatePosition","offetSetHeight","window","document","getElementById","offsetHeight","pageYOffset","err","addEventListener","removeEventListener"],"mappings":"oJAAA,OAASA,eAAT,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,cAAe,SAASC,CAAAA,iBAAT,CAA2BC,EAA3B,CAA+BC,MAA/B,CAAqD,IAAdC,CAAAA,QAAc,2DAAH,CAAG,eAChCJ,QAAQ,CAAC,KAAD,CADwB,wCAC3DK,SAD2D,eAChDC,YADgD,eAGlEP,eAAe,CAAC,UAAM,CACpB,QAASQ,CAAAA,cAAT,EAA0B,CACxB,GAAI,CACF,GAAMC,CAAAA,cAAc,CAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+BT,EAA/B,EAAmCU,YAA1D,CACA,GAAIH,MAAM,CAACI,WAAP,CAAqBL,cAAc,CAAGJ,QAAjB,CAA4BD,MAArD,CAA6D,CAC3DG,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAAC,MAAOQ,GAAP,CAAY,CACZR,YAAY,CAAC,KAAD,CAAZ,CACD,CACF,CACDG,MAAM,CAACM,gBAAP,CAAwB,QAAxB,CAAkCR,cAAlC,EACAA,cAAc,GACd,MAAO,kBAAME,CAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,CAAqCT,cAArC,CAAN,EAAP,CACD,CAdc,CAcZ,CAACL,EAAD,CAAKC,MAAL,CAAaC,QAAb,CAdY,CAAf,CAeA,MAAOC,CAAAA,SAAP,CACD","sourcesContent":["import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id, height, elements = 1) {\n  const [animation, setAnimation] = useState(false);\n\n  useLayoutEffect(() => {\n    function updatePosition() {\n      try {\n        const offetSetHeight = window.document.getElementById(id).offsetHeight;\n        if (window.pageYOffset > offetSetHeight * elements * height) {\n          setAnimation(true);\n        }\n      } catch (err) {\n        setAnimation(false);\n      }\n    }\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, [id, height, elements]);\n  return animation;\n}\n"]},"metadata":{},"sourceType":"module"}